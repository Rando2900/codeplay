<script src="/javascripts/redirigelogin.js"></script>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="stylesheets/perfil_usuario.css">
    <title>User Profile - Code-Play</title>
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
    <link rel="shortcut icon" href="/logo.ico" type="image/x-icon">
    <style>
        .profile-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            margin-top: 20px;
        }
        .user-name {
            font-size: 22px;
            font-weight: bold;
            color: #333;
        }
        .likes-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 10px;
            font-size: 18px;
            color: #555;
        }
        .heart-icon {
            font-size: 40px;
            color: red;
            margin-top: 5px;
        }
        .likes-count {
            font-size: 22px;
            font-weight: bold;
            color: #333;
        }
        .project-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            justify-content: center;
            width: 90%;
            max-width: 1200px;
            margin-top: 20px;
        }
        .project-card {
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 15px;
            background: white;
            box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
            transition: transform 0.3s ease;
        }
        .project-card:hover {
            transform: scale(1.05);
        }
        .project-card h2 {
            font-size: 18px;
            margin: 10px 0;
            color: #333;
        }
        iframe {
            width: 100%;
            height: 200px;
            border: none;
            border-radius: 5px;
        }
        .action-buttons {
            display: flex;
            justify-content: space-around;
            margin-top: 10px;
        }
        .project-button {
            padding: 8px 12px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background 0.3s ease;
        }
        .fork-button {
            background-color: #007BFF;
            color: white;
        }
        .fork-button:hover {
            background-color: #0056b3;
        }
        .view-button {
            background-color: #007BFF;
            color: white;
        }
        .view-button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <%- include('partials/header') %>
    
    <main class="profile-container">
        <h1>User Profile</h1>
        <p id="user-name" class="user-name">Loading user...</p>

        <div class="likes-container">
            <p>Likes</p>
            <div class="heart-icon">❤️</div>
            <p id="likes-count" class="likes-count">0</p>
        </div>

        <section class="projects-section">
            <h2>This user's projects</h2>
            <div class="project-grid" id="projects-container">
                <p>Loading projects...</p>
            </div>
        </section>
    </main>

    <%- include('partials/footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const params = new URLSearchParams(window.location.search);
            const userId = params.get('id');

            if (!userId) {
                document.getElementById('projects-container').innerHTML = '<p>Error: User not found.</p>';
                return;
            }

            try {
                const userResponse = await fetch(`/api/users/${userId}`);
                if (!userResponse.ok) throw new Error(`User not found: ${userResponse.status}`);
                const userData = await userResponse.json();
                document.getElementById('user-name').textContent = userData.usuario || 'Unknown User';
                
                const projectsResponse = await fetch(`/api/projects/user/${userId}`);
                if (!projectsResponse.ok) throw new Error('Error fetching projects');
                let projects = await projectsResponse.json();

                console.log("✅ Projects retrieved:", projects);

                projects = projects.filter(project => project.visibility === 'public');

                renderProjects(projects);
                calculateTotalLikes(projects);
            } catch (error) {
                console.error('Error loading data:', error);
                document.getElementById('user-name').textContent = 'Error loading user';
            }
        });

        function renderProjects(projects) {
            const container = document.getElementById('projects-container');
            container.innerHTML = '';

            if (projects.length === 0) {
                container.innerHTML = '<p>This user has no public projects.</p>';
                return;
            }

            projects.forEach(project => {
                const card = document.createElement('div');
                card.classList.add('project-card');

                const iframe = document.createElement('iframe');
                iframe.srcdoc = `
                    <!DOCTYPE html>
                    <html lang="en">
                    <head>
                        <style>${project.css}</style>
                    </head>
                    <body>
                        ${project.html}
                        <script> ${project.js.replace(/<\/script>/g, "<\\/script>")} <\/script>
                    </body>
                    </html>
                `;
                iframe.width = "100%";
                iframe.height = "200px";

                const titleElement = document.createElement('h2');
                titleElement.textContent = project.title || 'Untitled Project';

                const buttonsContainer = document.createElement('div');
                buttonsContainer.classList.add('action-buttons');

                const viewButton = document.createElement('button');
                viewButton.textContent = 'View Project';
                viewButton.classList.add('project-button', 'view-button');
                viewButton.onclick = () => window.location.href = `/project?id=${project._id}`;

                const forkButton = document.createElement('button');
                forkButton.textContent = 'Fork';
                forkButton.classList.add('project-button', 'fork-button');
                forkButton.onclick = async () => {
                    try {
                        const response = await fetch(`/api/projects/${project._id}/fork`, {
                            method: 'POST',
                            credentials: 'include'
                        });

                        if (!response.ok) throw new Error('Error forking the project');

                        alert('Project successfully forked!');
                    } catch (error) {
                        console.error('Error:', error);
                    }
                };

                buttonsContainer.appendChild(viewButton);
                buttonsContainer.appendChild(forkButton);

                card.appendChild(iframe);
                card.appendChild(titleElement);
                card.appendChild(buttonsContainer);
                container.appendChild(card);
            });
        }

        function calculateTotalLikes(projects) {
            const totalLikes = projects.reduce((sum, project) => sum + (project.likes || 0), 0);
            document.getElementById('likes-count').textContent = totalLikes;
        }
    </script>
</body>
</html>
